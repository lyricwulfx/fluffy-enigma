name: ABC Install
description: Install Apt, Brew, and Choco dependencies in one action.
author: LyricWulf
branding:
  icon: package
  color: orange

inputs: 
  linux:  
    description: Apt dependencies
    required: false
  macos:
    description: Brew dependencies
    required: false
  windows:
    description: Choco dependencies
    required: false
  unix:
    description: Unix-like dependencies
    required: false
  all:
    description: All dependencies
    required: false
  verbose: 
    description: Verbose output
    required: false
  no-cache:
    description: Don't use cache
    required: false
runs: 
  using: composite
  steps:
  - name: Setup | Resolve runner dependencies
    shell: bash
    id: abc-init
    run: |
      ABC_DEPS=""
      case "$RUNNER_OS" in
      Linux)
        ABC_DEPS="${{inputs.all}} ${{inputs.unix}} ${{inputs.linux}}" ;;
        # CACHE_DIRECTORY="C:\ProgramData\chocolatey\lib"$'\r\n'"%TEMP%\chocolatey" # TODO: Cache apt directory
      macOS)
        ABC_DEPS="${{inputs.all}} ${{inputs.unix}} ${{inputs.macos}}" ;;
        # TODO: Cache brew directory
        # CACHE_DIRECTORY=
      Windows)
        ABC_DEPS="${{inputs.all}} ${{inputs.windows}}" ;;
        # TODO: Cache choco directory
        # CACHE_DIRECTORY="C:\ProgramData\chocolatey\lib"$'\r\n'"%TEMP%\chocolatey" # TODO: Cache apt directory
      esac
      
      # Remove extra spaces
      ABC_DEPS=$(echo -n "${ABC_DEPS}" | xargs)
      ABC_DEPS_HASH=$(echo -n "${ABC_DEPS}" | sha256sum | awk '{print $1}')
      
      echo "::set-output name=deps::$ABC_DEPS"
      echo "::set-output name=hash::$ABC_DEPS_HASH"
      # TODO: Cache package directories
      # echo "::set-output name=cache_dirs::$CACHE_DIRECTORY"

  - name: Install | Abc
    shell: bash
    env:
      ABC_DEPS: ${{ steps.abc-init.outputs.deps }}
      ABC_OUT: ${{ (inputs.verbose == 'true' && '/dev/stdout') || '/dev/null' }}
      # DEBIAN_FRONTEND: noninteractive
    run: |
      ABC_PLATFORM_SCRIPT="$GITHUB_ACTION_PATH/runner/$RUNNER_OS.sh"

      # Ensure the runner script exists
      if [ ! -e $ABC_PLATFORM_SCRIPT ]
      then
        echo "$RUNNER_OS is not supported by ABC"
        exit 0
      fi

      # Ensure there are any dependencies
      if [ ! -n "${ABC_DEPS// }" ]
      then 
        echo "No dependencies to install on $RUNNER_OS"
        exit 0
      fi
      
      . $ABC_PLATFORM_SCRIPT
      