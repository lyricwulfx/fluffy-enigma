name: ABC Install
description: Install Apt, Brew, and Choco dependencies in one action.
author: LyricWulf
branding:
  icon: package
  color: orange

inputs: 
  linux:  
    description: Apt dependencies
    required: false
  macos:
    description: Brew dependencies
    required: false
  windows:
    description: Choco dependencies
    required: false
  unix:
    description: Unix-like dependencies
    required: false
  all:
    description: All dependencies
    required: false
  verbose: 
    description: Verbose output
    required: false
  no-cache:
    description: Don't use cache
    required: false
runs: 
  using: composite
  steps:
  - name: Setup | Resolve runner dependencies
    shell: bash
    id: abc-init
    env: 
      ABC_PKGS_ALL: ${{ inputs.all }}
      ABC_PKGS_LINUX: ${{ inputs.linux }}
      ABC_PKGS_MACOS: ${{ inputs.macos }}
      ABC_PKGS_WINDOWS: ${{ inputs.windows }}
      ABC_PKGS_UNIX: ${{ inputs.unix }}
      ABC_CFG_VERBOSE: ${{ inputs.verbose }}
    run: |
      # Set output verbosity
      # We do this here because ${1:-/dev/stdout} doesn't work in env section
      [ "$ABC_CFG_VERBOSE" == "true" ] && 
      export ABC_OUT=/dev/null || 
      export ABC_OUT=${1:-/dev/stdout}

      # Check if ABC yml exists
      ABC_YAML_FILE="$GITHUB_WORKSPACE/.abc.yml"
      if [ -e "$ABC_YAML_FILE" ]
      then
        . "$GITHUB_ACTION_PATH/yaml.sh"
        create_variables "$ABC_YAML_FILE" "ABC_YML_"
        ABC_PKGS_ALL="$ABC_PKGS_ALL $ABC_YML_ALL" 
        ABC_PKGS_LINUX="$ABC_PKGS_LINUX $ABC_YML_LINUX"
        ABC_PKGS_MACOS="$ABC_PKGS_MACOS $ABC_YML_MACOS"
        ABC_PKGS_WINDOWS="$ABC_PKGS_WINDOWS $ABC_YML_WINDOWS"
        ABC_PKGS_UNIX="$ABC_PKGS_UNIX $ABC_YML_UNIX"
      fi

      # Resolve dependencies list
      ABC_DEPS=""
      case "$RUNNER_OS" in
      Linux)
        ABC_DEPS="$ABC_PKGS_ALL $ABC_PKGS_UNIX $ABC_PKGS_LINUX" ;;
        # CACHE_DIRECTORY= # TODO: Cache apt directory
      macOS)
        ABC_DEPS="$ABC_PKGS_ALL $ABC_PKGS_UNIX $ABC_PKGS_MACOS" ;;
        # CACHE_DIRECTORY= # TODO: Cache brew directory
      Windows)
        ABC_DEPS="$ABC_PKGS_ALL $ABC_PKGS_WINDOWS"              ;;
        # CACHE_DIRECTORY= # TODO: Cache choco directory
      esac
      
      # Remove extra spaces
      ABC_DEPS=$(echo -n "${ABC_DEPS}" | xargs)
      
      echo "::set-output name=deps::$ABC_DEPS"

      # TODO: Cache package directories
      # echo "::set-output name=cache_dirs::$CACHE_DIRECTORY"
      # ABC_DEPS_HASH=$(echo -n "${ABC_DEPS}" | sha256sum | awk '{print $1}')
      echo "::set-output name=hash::$ABC_DEPS_HASH"

  - name: Install | Abc
    shell: bash
    env:
      ABC_DEPS: ${{ steps.abc-init.outputs.deps }}
      # DEBIAN_FRONTEND: noninteractive
    run: |
      # Ensure the runner script exists
      ABC_PLATFORM_SCRIPT="$GITHUB_ACTION_PATH/runner/$RUNNER_OS.sh"
      if [ ! -e "$ABC_PLATFORM_SCRIPT" ]
      then
        echo "$RUNNER_OS is not supported by ABC" > "$ABC_OUT"
        exit 0
      fi

      # Ensure there are any dependencies
      if [ ! -n "${ABC_DEPS// }" ]
      then 
        echo "No dependencies to install on $RUNNER_OS" > "$ABC_OUT"
        exit 0
      fi
      
      # Install dependencies!
      . "$ABC_PLATFORM_SCRIPT"
      